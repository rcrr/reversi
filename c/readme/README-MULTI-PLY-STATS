
README-MULTI-PLY-STATS

2022-05-06

Cosa dobbiamo fare per avere una misura accurata della accuratezza della previsione del 'game value' (GV) al crescere dei PLY della analisi ?

Riassumo come valutiamo una 'evaluation function' (EF):

Lanciare RStudio, posizionarsi nella cartella ($REVERSI_HOME)/c/r, caricare il file 'rglmw.R' e quindi caricare un modello:

> r <- load_model_weights("/lake/rcrr/rglmdata", "A2050")

Eseguendo la funzione:

> r$plot_distrib

otteniamo il grafico con RESIDUI e VALIDAZIONE e i momenti delle due distribuzioni.

Quello che conta e' avere la media della validazione a zero e la minima 'standard deviation' (sd) possibile.

Nel caso del modello A2050 (A____: batch_id=3, _20__: empty_count=20, ___50:feature&pattern=[INTERCEPT,MOBILITY3,XEDGE,CORNER,R2,R3,R4,DIAG4,DIAG5,DIAG6,DIAG7,DIAG8,2X5COR])
abbiamo mean = -0.0002 ed sd = 0.0564.

Ora l'obiettivo e' di ottenere le stesse distribuzioni per PLY = [1..n], dove ora abbiamo solo PLY = 0.

Un modello e' caratterizzato da questo set di files:

00 A2050_00.dat                       ... Binary file generated by REGAB extract action. Hold the raw game position data ( GV and classification ).
01 A2050_00.dat.SHA3-256              ... File digest.
02 A2050_00.log                       ... REGAB extract log file.
03 A2050_01.ABPw.log                  ... RGLM extract log file.
04 A2050_01.A.csv                     ... CSV file having the Position Summary Table.
05 A2050_01.B.csv                     ... CSV file having the Feature and Pattern Frequencies Summary Table.
06 A2050_01.dat                       ... Binary file generated by RGLM having as imput A2050_00.dat. Hold the solved RGLM problem.
07 A2050_01.dat.SHA3-256              ... File digst.
08 A2050_01.log                       ... RGLM solve log file.
09 A2050_01.P.csv                     ... CSV file having the Game Positions List.
10 A2050_01.w.dat                     ... Binary file having the RGLM model weights.
11 A2050_01.w.dat.SHA3-256            ... File digest.
12 A2050_01.w.P_check.csv             ...
13 A2050_01.w.P.csv                   ...
14 A2050_01.w.W.csv                   ...
15 A2050_01.w.WPP_check.log           ...
16 A2050.png                          ... Image file showing the RESIDUAL and VALIDATION distributions.
17 A2050_positions_check.dat          ...
18 A2050_positions_check.dat.SHA3-256 ... 
19 A2050_positions_check.log          ... 
20 A2050.sentinel                     ... 

Che vengono generati nella sequenza qui descritta impiegando i dati conservati nel database Reversi (DB) e dai programmi REGAB, RGLM, RGLMW.

La sequnza e' orchestrata dallo script bash ($REVERSI_HOME)/c/script/rglm.sh.
Lo script e' governato dai seguenti parametri:

# As input it requires four mandatory arguments:
#
# - $1 : empty count        - Board empty square count used for the selection of the game positions 
# - $2 : features           - The list of selected features, separated by commas, without spaces (e.g. MOBILITY,INTERCEPT) 
# - $3 : patterns           - The list of selected features, separated by commas, without spaces (e.g. EDGE,DIAG8)
# - $4 : run-code           - A string used to build the names of the output files. (e.g. A000)
# - $5 : train batches      - It is the REGAB batch_id list (e.g. 3,9) used for the extraction and then for the trainining of the model
# - $6 : validation batches - It is the REGAB batch_id list (e.g. 5,6) used for the extraction and then for the validation of the model
# - $7 : REGAB env          - It is the selected section in the REGAB configuration file (e.g test, production, ...)
# - $8 : check sentinel     - If present and equal to check_sentinel the program checks the existence of the sentinel file
#                             and skips the procedure if found
#
# There are further parameters that oversight the script behaviour:
#
# - OUT_DIR=./rglmdata      - It is the target diregtory for the generated files
# - BINARY_DIR=./build/bin  - It is the directory where are located the REGAB, RGLM, and RGLMW binaries
# - REGAB_CFG=cfg/regab.cfg - it is the REGAB configuration file used to access the database
# - REGAB_PSTAT=CMS,CMR     - It is the list of game position status used for the selection into the REGAB database
#
# The default values are meant to support an usage scenario where the script is located in the ./script directory.
# The script is run from the "REVERSI C base directory", and the output is directed into the ./rglmdata.
# Here an example for a run:
#
#   ./script/rglm.sh 20 MOBILITY,INTERCEPT EDGE A000 3 6 test check_sentinel
#
# The script executes the following steps:
#
# -1- Extracts from the REGAB database the GENERAL DATA file and save it as ${OUT_DIR}/${RUNCODE}_00.dat
#     Using our conventions and the example arguments we will get a new ./rglmdata/A000_00.dat data file,
#     together with its hash file (./rglmdata/A000_00.dat.SHA3-256) and a log file (./rglmdata/A000_00.log).
#
# -2- Extracts from the REGAB database the POSITIONS DATA file and save it as ${OUT_DIR}/${RUNCODE}_positions_check.dat
#     As well the files generated are ./rglmdata/A000_positions_check.dat data file,
#     together with its hash file (./rglmdata/A000_positions_check.dat.SHA3-256) and a log file (./rglmdata/A000_positions_check.log).
#
# -3- Solves the RGLM problem, saving the result as "$OUT_DIR/${RUNCODE}_01.dat". The checksum and log files are created as well.
#
# -4- From the solved data file, the A (extract-ps-table), B (extract-efs-table), and P (extract-gp-table) CVS files are extracted as
#     as well as the binary w (model-weights-output-file) file with the appropriate checksum and a cumulative log file.
#
# -5- The model weight file (${OUT_DIR}/${RUNCODE}_01.w.dat) is used in three different sequential runs of the RGLMW program that
#     generates the weights CSV file, the positions CSV file, and the model check CSV file.
#
# -6- Writes the sentinel file ${OUT_DIR}/${RUNCODE}.sentinel
#
# In summary the target directory is populated with the following files ($ ls -1 ./rglmdata):
# 
# rglmdata/A000_00.dat                        RGLM GENERAL DATA binary file extracted by REGAB.                                      (step 1)
# rglmdata/A000_00.dat.SHA3-256               SHA3-256 fingerprint of the rglmdata/A000_00.dat file.                                 (step 1)
# rglmdata/A000_00.log                        Log file generated by the REGAB extraction.                                            (step 1)
# rglmdata/A000_01.ABPw.log                   Cumulated log file generated by the RGLM extractions.                                  (step 4)
# rglmdata/A000_01.A.csv                      The position summary table, extracted from the solved model, in CSV format.            (step 4)
# rglmdata/A000_01.B.csv                      The entity frequency  summary table, extracted from the solved model, in CSV format.   (step 4)
# rglmdata/A000_01.dat                        RGLM GENERAL DATA binary file solved by RGLM.                                          (step 3)
# rglmdata/A000_01.dat.SHA3-256               SHA3-256 fingerprint of the rglmdata/A000_01.dat file.                                 (step 3)
# rglmdata/A000_01.log                        Log file generated by the REGAB extraction.                                            (step 3)
# rglmdata/A000_01.P.csv                      The game position table, extracted from the solved model, in CSV format.               (step 4)
# rglmdata/A000_01.w.dat                      The model weights binary file extracted from the solved model.                         (step 4)
# rglmdata/A000_01.w.dat.SHA3-256             SHA3-256 fingerprint of the rglmdata/A000_01.w.dat file.                               (step 4)
# rglmdata/A000_01.w.P_check.csv              The residual as a model validation, computed by the RGLMW program, in CSV format.      (step 5)
# rglmdata/A000_01.w.P.csv                    The residual of the game position table, computed by the RGLMW program, in CSV format. (step 5)
# rglmdata/A000_01.w.W.csv                    The model weights table, extracted from the binary file, in CSV format.                (step 5)
# rglmdata/A000_01.w.WPP_check.log            Cumulated log file generated by the RGLMW extractions.                                 (step 5)
# rglmdata/A000_positions_check.dat           RGLM POSITIONS binary file extracted by REGAB.                                         (step 2)
# rglmdata/A000_positions_check.dat.SHA3-256  SHA3-256 fingerprint of the rglmdata/A000_positions_check.dat file.                    (step 2)
# rglmdata/A000_positions_check.log           Log file generated by the REGAB extraction.                                            (step 2)
# rglmdata/A000.sentinel                      The sentinel file.                                                                     (step 6)
#

La procedura R load_model_weights prima esegue le due funzioni:

 1- load_dt_model_weights  : carica i RESIDUI del modello ottimizzato dal programma RGLM  _01.w.P.csv
 2- load_dtv_model_weights : carica i RESIDUI delle posizioni usate per la VALIDAZIONE    _01.w.P_check.csv 

Poi elabora tutta la statistica sui files.

Il tracciato dei due files e' il medesimo:

A2050_01.w.P.csv 
       I;    ROW_N;      GP_ID;                MOVER;             OPPONENT; GAME_VALUE; GAME_VALUE_TRANSFORMED; EVALUATION_FUNCTION;         RESIDUAL
       0;        0;        224;  2034726260615544843; -6899461581654450432;         -4;         0.469375014305;      0.554009258747;  -0.084634244442
       1;        1;        285;     9076683914944062; -8536924610614902656;        -42;         0.178437501192;      0.208967819810;  -0.030530318618
       2;        2;        346;  2034590162192695360;   145011317751608320;         44;         0.836875021458;      0.826058506966;  +0.010816514492
       3;        3;        408;  4612576660695286032;  1602389712668876296;         24;         0.683749973774;      0.714879095554;  -0.031129121780
       4;        4;        469;  1495217308047274574; -6900032753537873920;        -20;         0.346875011921;      0.335986375809;  +0.010888636112
       5;        5;        530;  4764879101431135234;    76349756208677120;        -20;         0.346875011921;      0.246175289154;  +0.100699722767
       6;        6;        592;   505253657725307280;   582136949544908289;         36;         0.775624990463;      0.755669772625;  +0.019955217838
       7;        7;        653; -9196284002955268602;   907546314831659025;        -10;         0.423437505960;      0.304560810328;  +0.118876695633
       8;        8;        714;   586791764606530074;   144972805014817796;         -8;         0.438749998808;      0.403386443853;  +0.035363554955

A2050_01.w.P_check.csv 
       I;    ROW_N;      GP_ID;                MOVER;             OPPONENT; GAME_VALUE; GAME_VALUE_TRANSFORMED; EVALUATION_FUNCTION;         RESIDUAL
       0;        0;   62088053;  4784628202360413206;  3753773650784617217;        -30;         0.270312488079;      0.208756834269;  +0.061555653811
       1;        1;   62088114; -9014225021820833760;  3249615843075555328;         -6;         0.454062491655;      0.393364965916;  +0.060697525740
       2;        2;   62088175;  8070613656309657664;    71609133823363092;          4;         0.530624985695;      0.596117436886;  -0.065492451191
       3;        3;   62088236;  2306419170743367426;  1162193655840131196;         -6;         0.454062491655;      0.394482046366;  +0.059580445290
       4;        4;   62088299; -9057833301707717106;  4084870570770790528;        -10;         0.423437505960;      0.497160643339;  -0.073723137379
       5;        5;   62088360;    36031195968341772;  6808449023557046274;         54;         0.913437485695;      0.850120425224;  +0.063317060471
       6;        6;   62088421;    18579725694541824;  -235052951522829292;         -4;         0.469375014305;      0.379222363234;  +0.090152651072
       7;        7;   62088484;     9040521363980849;   619140016647503168;         40;         0.806249976158;      0.846401989460;  -0.040152013302
       8;        8;   62088546;   592674203045757441;   505535587888557198;         -2;         0.484687507153;      0.381854414940;  +0.102833092213


###
### Come procediamo ?
###
### Per minimizzare la confusione di nuovi formati terrei il tracciato dei P files standard, dove .w.P_check.csv equivale a .w.P00_check.csv con P00 che significa PLY = 00
### Un nuovo programma o un nuovo flag per RGLMW calcola la nuova sequenza di files .w.P01_check.csv ... .w.PXX_check.csv dove le due colonne EVALUATION_FUNCTION e RESIDUAL
### sono calcolate al PLY = XX.
### Il programma deve risolvere le game positions usando il solver GVE con depth = PLY.
###
### Mi pare lucido ... sviluppiamo l'analisi ...
###

