
  README-C

  Copyright (c) 2012, 2014 Roberto Corradini. All rights reserved.

  This file is part of the reversi program
  http://github.com/rcrr/reversi

  This program is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the
  Free Software Foundation; either version 3, or (at your option) any
  later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA
  or visit the site <http://www.gnu.org/licenses/>.

This file describes the configuration and settings done to prepare the C environment used to develop and execute
the REVERSI program.

Software components being used are:

 - Ubuntu distribution 14.04 (x86_64)
 - GCC 4.8.2
 - glib libglib-2.0 (https://developer.gnome.org/glib/stable/)
 - doxygen 1.8.6
 - The GNU/Linux toolchain
 - GNU GSL package (http://www.gnu.org/software/gsl/)

To install the GSL software run:

$ sudo apt-get install gsl-bin libgsl0-dbg libgsl0-dev libgsl0

Run the following commands in a terminal:

$ make clean
$ make
$ make test
$ make doxygen
$ make endgame_log_files

Everything is build under the ./build directory.

Three executables are created in ./build/bin:
  endgame_solver
  gpdb_verify
  dump_bitrow_changes

endgame_solver is the main program, it is the entry point for several solvers and utilities.
Run 'endgame_solver -h' for help and options.

gpdb_verify (game position database consistency verifier) is a tool that reads and verifies a file based database of game position.
Run 'gpdb_verify -h' for help and options.

dump_bitrow_changes is an utility for testing the table generated by the endgame_solver at runtime and used for game move computation.
It generates on sdtout a list of 524,288 rows having as columns: ARRAY_INDEX;PLAYER_ROW;OPPONENT_ROW;MOVE_POSITION;PLAYER_CHANGES.
